name: Tests
on: [push, pull_request]
jobs:

  test:
    name: CKAN 2.9
    runs-on: ubuntu-latest
    container:
      # Use an Ubuntu image since it installs pandas faster than Alpine
      image: keitaro/ckan:2.9-focal
      options: -u root
    services:
      solr:
        image: ckan/ckan-solr-dev:2.9
      postgres:
        image: ckan/ckan-postgres-dev:2.9
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432  
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
          image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
    - uses: actions/checkout@v2
    - name: Install requirements
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r /srv/app/src/ckan/dev-requirements.txt
        pip install -r dev-requirements.txt
        pip install -e .
        pip install -U requests[security]
    - name: Setup extension
      run: |
        pip install future
        ckan -c /srv/app/src/ckan/test-core.ini db init
    - name: Run tests
      run: pytest --ckan-ini=/srv/app/src/ckan/test-core.ini --cov=ckanext.searchterms --disable-warnings ckanext/searchterms/tests